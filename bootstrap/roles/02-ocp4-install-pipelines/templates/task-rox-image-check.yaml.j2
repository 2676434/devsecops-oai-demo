apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: rox-image-check
  namespace: cicd
spec:
  workspaces:
  - name: workspace
  params:
    - description:  ACS endpoint
      name: rox_central_endpoint
      type: string
    - description: Secret containing the StackRox API token with CI permissions
      name: rox_api_token
      type: string
    - description: 'Full name of images file containing images name to scan'
      name: images_file
      type: string
      default: "images.json"
  results:
    - description: Output of `roxctl image check`
      name: check_output
  steps:
    - name: rox-image-check
      image: registry.access.redhat.com/ubi8/ubi-minimal:latest
      workingDir: /workspace/workspace
      env:
        - name: ROX_API_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(inputs.params.rox_api_token)
              key: rox_api_token
        - name: ROX_CENTRAL_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: $(inputs.params.rox_central_endpoint)
              key: rox_central_endpoint

      script: |
        #!/usr/bin/env bash
        set +x
        curl -k -L -H "Authorization: Bearer $ROX_API_TOKEN" https://$ROX_CENTRAL_ENDPOINT/api/cli/download/roxctl-linux --output ./roxctl  > /dev/null; echo "Getting roxctl"
        chmod +x ./roxctl  > /dev/null
        while read image
        do
        echo "## Scanning image $image ##"
        ./roxctl image check --insecure-skip-tls-verify -e $ROX_CENTRAL_ENDPOINT --image $image
        done < $(inputs.params.images_file)
